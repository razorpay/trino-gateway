pipeline:
  build-api-docker-image:
    group: A
    image: plugins/docker
    repo: razorpay/${DRONE_REPO_NAME}
    dockerfile: build/docker/prod/Dockerfile.api
    build_args:
      - GIT_COMMIT_HASH=${DRONE_COMMIT_SHA}
    secrets: [docker_username, docker_password, git_token]
    build_args_from_env: [git_token]
    tags: api-${DRONE_COMMIT_SHA}
    when:
      status: [success]
      event:
        exclude: [deployment, pull_request, tag]
        include: [push]

  build-migration-docker-image:
    group: A
    image: plugins/docker
    repo: razorpay/${DRONE_REPO_NAME}
    dockerfile: build/docker/prod/Dockerfile.migration
    build_args:
      - GIT_COMMIT_HASH=${DRONE_COMMIT_SHA}
    secrets: [docker_username, docker_password, git_token]
    build_args_from_env: [git_token]
    tags: migration-${DRONE_COMMIT_SHA}
    when:
      status: [success]
      event:
        exclude: [deployment, pull_request, tag]
        include: [push]

  build-worker-docker-image:
    group: A
    image: plugins/docker
    repo: razorpay/${DRONE_REPO_NAME}
    dockerfile: build/docker/prod/Dockerfile.worker
    build_args:
      - GIT_COMMIT_HASH=${DRONE_COMMIT_SHA}
    secrets: [docker_username, docker_password, git_token]
    build_args_from_env: [git_token]
    tags: worker-${DRONE_COMMIT_SHA}
    when:
      status: [success]
      event:
        exclude: [deployment, pull_request, tag]
        include: [push]

  build-drone-docker-image:
    group: A
    image: plugins/docker
    repo: razorpay/${DRONE_REPO_NAME}
    dockerfile: build/docker/prod/Dockerfile.drone
    build_args:
      - GIT_COMMIT_HASH=${DRONE_COMMIT_SHA}
    secrets: [docker_username, docker_password, git_token]
    build_args_from_env: [git_token]
    tags: drone-${DRONE_COMMIT_SHA}
    when:
      status: [success]
      event:
        exclude: [deployment, pull_request, tag]
        include: [push]

  golangci/golangci-lint:
    group: B
    image: razorpay/${DRONE_REPO_NAME}:drone-${DRONE_COMMIT_SHA}
    commands:
      - wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh
      - cp ./bin/golangci-lint /usr/bin/
      - cd /src/
      - /usr/bin/golangci-lint -D gosimple run ./...
    when:
      event:
        exclude: [deployment, pull_request, tag]
        include: [push]

  copy-coverage-file:
    group: B
    image: razorpay/${DRONE_REPO_NAME}:drone-${DRONE_COMMIT_SHA}
    commands:
      - cd /src/
      - apk add bash
      - chmod +x /src/scripts/code-coverage.sh
      - bash /src/scripts/code-coverage.sh
      - cp tmp/coverage.out /drone/coverage.cov
    when:
      branch:
        - master
      status: [success]
      event:
        exclude: [deployment, pull_request, tag]
        include: [push]

  trivy:
    group: C
    image: aquasec/trivy:latest
    commands:
      - export TRIVY_PASSWORD=$DOCKER_PASSWORD
      - export TRIVY_USERNAME=$DOCKER_USERNAME
      - echo $TRIVY_USERNAME
      - echo $DOCKER_USERNAME
      - trivy --exit-code 1 -f json "razorpay/${DRONE_REPO_NAME}:api-${DRONE_COMMIT_SHA}"
      - trivy --exit-code 1 -f json "razorpay/${DRONE_REPO_NAME}:migration-${DRONE_COMMIT_SHA}"
      - trivy --exit-code 1 -f json "razorpay/${DRONE_REPO_NAME}:worker-${DRONE_COMMIT_SHA}"
    secrets: [docker_username, docker_password]
    when:
      branch:
        - master
    environment:
      - TRIVY_AUTH_URL=https://registry.hub.docker.com

  sonar-push:
    group: C
    image: razorpay/onggi:drone-sonar-plugin-v1311
    secrets:
      - source: sonar_token
        target: SONAR_TOKEN
      - source: sonar_host
        target: SONAR_HOST
    when:
      branch:
        - master
    commands:
      - sonar-scanner
        -Dsonar.host.url=$SONAR_HOST
        -Dsonar.projectKey=${DRONE_REPO_NAME}
        -Dsonar.projectName=${DRONE_REPO_NAME}
        -Dsonar.projectVersion=${DRONE_COMMIT_SHA}
        -Dsonar.login=$SONAR_TOKEN
        -Dsonar.projectBaseDir=./
        -Dsonar.go.coverage.reportPaths=/drone/coverage.cov
        -Dsonar.exclusions=test/**,scripts/**,rpc/**,proto/**,docs/**,deployments/**,configs/**,cmd/**,build/**,bin/**,internal/migrations/*,**/*_test.go,**/*mock.go,**/*coverage*,**/constants/*,**/*constants.go,coverage/*

  build-notify:
    group: D
    image: plugins/slack
    secrets: [slack_webhook]
    channel: dev-test # TODO: change this
    username: drone
    icon_url: https://avatars2.githubusercontent.com/u/2181346?s=200&v=4
    template: >
      {{#success build.status}}
        Build succeeded.
      {{else}}
        Build failed.
      {{/success}}
        Repo: {{repo.name}}
        Build No:{{build.number}}
        Branch: {{build.branch}}
        Commit: {{build.commit}}
        Author: {{build.author}}
        Started at: {{build.started}}
        Time taken: {{since build.started}}
        Link: {{build.link}}
    when:
      status: [ failure ]
      branch:
        - master
      event:
        exclude: [deployment]
        include: [push]
